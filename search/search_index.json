{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome!\n\n\nThis website is currently under construction. It is not yet ready for use. Please contact anna.syme@unimelb.edu.au with questions.\n\n\nThis site contains tutorials for using Galaxy Australia.\n\n\nTutorials are listed in the left hand panel, or click the menu button (three horizontal bars) in the top left of the page.\n\n\n\n\nAbout\n\n\nGalaxy-Au information.\n\n\nAuthors\n\n\nSupport\n\n\n\n\nResearch Data Services\n\n\nBioplatforms Australia\n\n\nNectar", 
            "title": "Galaxy Australia"
        }, 
        {
            "location": "/#welcome", 
            "text": "This website is currently under construction. It is not yet ready for use. Please contact anna.syme@unimelb.edu.au with questions.  This site contains tutorials for using Galaxy Australia.  Tutorials are listed in the left hand panel, or click the menu button (three horizontal bars) in the top left of the page.", 
            "title": "Welcome!"
        }, 
        {
            "location": "/#about", 
            "text": "Galaxy-Au information.", 
            "title": "About"
        }, 
        {
            "location": "/#authors", 
            "text": "", 
            "title": "Authors"
        }, 
        {
            "location": "/#support", 
            "text": "Research Data Services  Bioplatforms Australia  Nectar", 
            "title": "Support"
        }, 
        {
            "location": "/modules/galaxy/", 
            "text": "Starting with Galaxy\n\n\nWhat is Galaxy?\n\n\nGalaxy is a web-based analysis and workflow platform.\n\n\n\n\nDesigned for biologists\n\n\nEasily accessible via a web page\n\n\nFree to use\n\n\nYou can upload your own data\n\n\nYou can access shared data\n\n\nUse common bioinformatics tools\n\n\nDevelop workflows\n\n\n\n\nIn this set of tutorials, we are using \nGalaxy-Australia\n.\n\n\n\n\nWe access Galaxy-Australia by going to a web page with this address: [add address]\n\n\nHowever, there are many different Galaxy servers available. Some of them have a set of general tools, and some have been developed for particular analyses. You can use more than one Galaxy server but you will need to register separately for each one, and they don\nt share data between them. A list of Galaxy servers is \nhere\n.\n\n\nMore information about the Galaxy project can be found \nhere\n.\n\n\n\n\nThe Galaxy-Australia page looks like this:\n\n\n[replace with Galaxy-Au screenshot]\n\n\n\n\n\n\nTools\n on the left\n\n\nViewing\n panel in the middle\n\n\nHistory\n of analysis and files on the right\n\n\n\n\nCan I use Galaxy?\n\n\nYes!\n\n\n\n\nGalaxy is free to use and available for everyone.\n\n\nAustralian researchers may find Galaxy-Australia particularly suited to their analysis needs as it has been developed in consultation with scientists across the country.\n\n\n\n\nHow do I get started?\n\n\nTo use Galaxy-Australia, follow these steps:\n\n\n\n\nOpen your internet browser. Use Firefox, Chrome or Safari (not Internet Explorer).\n\n\nOpen a new tab.\n\n\nIn the address bar, type in the address of Galaxy-Australia [add address].\n\n\n\n\n[update image]\n\n\n\n\nClick on \nUser\n button on the right.\n\n\n[update image]\n\n\n\n\n\n\nSelect: \nUser \n Register\n\n\nEnter your email, choose a password, and choose a user name.\n\n\n\n\nClick \nSubmit\n\n\n\n\n\n\nLogin, and refresh the page.\n\n\n\n\n\n\nEach time you use this Galaxy server, log in to see your data and histories.\n\n\n\n\nYou have [amount of storage]\n\n\nYour data will stay stored for [amount of time.]\n\n\nIf you are using a different Galaxy server, you would need to register/log in to that server.\n\n\n\n\nHow to use Galaxy\n\n\n\n\n\n\nAvailable tools are in the left hand panel. Find the tool you want or use the search bar at the top of the tools.\n\n\n\n\n\n\nClick on the tool you want to use.\n\n\n\n\n\n\nThe tool interface will appear in the centre Galaxy panel. Check the settings.\n\n\n\n\n\n\nClick \nExecute\n.\n\n\n\n\n\n\nWhen the tool has finished, output file(s) will appear at the top of your \nCurrent History\n in the right hand panel.\n\n\n\n\n\n\nClick on the eye icon next to a file to view it.\n\n\n\n\n\n\nTo access older histories, use the button at the top right of the History panel.\n\n\n\n\n\n\nExercise 1\n\n\nName your current history\n\n\nname\n\n\nenter\n\n\nUpload a file\n\n\nfrom Zenodo\n\n\ne.g. 1 x fastQ file - download to your computer\nGalaxy - get data - upload file - choose local file\n\n\nUse a tool\n\n\ne.g. FASTQC\n\n\nView results\n\n\nclick on file name\n\n\nExercise 2\n\n\nCreate a new history\n\n\nImport some data\n\n\nfrom Zenodo\n\n\ne.g. 2 x fastq files\n\n\nCopy this link:\n\n\nadd in zenodo link\n\n\nchange the file name\n\n\nchange the file type\n\n\nUse a tool - e.g. Pear\n\n\nView results\n\n\nExercise 3\n\n\nImport a history from Galaxy-Au\n\n\nadd a simple history to Galaxy Au\n\n\nimport\n\n\ne.g. 2 x fastq files and a reference genome\n\n\nFor Galaxy-Australia users, import the following history:\n\n\n[add this history to Galaxy-Au]\n\n\n\n\nIn Galaxy, go to the top menu bar\n\n\n\n\nClick on \nShared Data\n\n\n\n\n\n\nFrom the drop down menu, click on \nHistories\n\n\n\n\n\n\n[update image]\n\n\n\n\n\n\nFrom the list of Published Histories, click \nname of history\n\n\n\n\n[update image]\n\n\n\n\n\n\nIn the top right, click on \nImport history\n\n\n\n\n\n\n\n\nThis history will now be in your \nCurrent history\n - the right hand pane in Galaxy.\n\n\nThere should be XX files. (The number in front of the file name is not important.)\n\n\n\n\n[update image]\n\n\n\n\nUse a tool\n\n\nUse a tool - e.g. freebayes\n\n\nFilter results\n\n\nthen filter results\n\n\nView results\n\n\nView results\n\n\nExercise 4 - Import a shared history from a link\n\n\n\n\nClick on the \nHistory\n cog \n\n\nSelect \nImport from File\n\n\n\n\n\n\n\n\nIn the box called \nArchived History URL\n, paste in the link address to the Galaxy history (that you copied above).\n\n\nClick \nSubmit\n\n\nWait a few seconds.\n\n\nClick on the \nview all histories\n button \n\n\nSee if the Galaxy history has been imported: it will be called \nimported from archive: Data\n\n\nAbove that pane, click on the \nSwitch to\n button.\n\n\nThen click \nDone\n (in the top left corner).\n\n\nYou should now have a list of five files in your current history. We will use these for the Genomics Workshop; or see below for additional files.\n\n\n\n\n\n\nExercise 5\n\n\nRe-run a tool\n\n\nwith changed settings.\n\n\nExercise 6\n\n\nLook at all your histories\n\n\ncreate a new history\n\n\nyou can drag files between histories\n\n\ndrag some files in\n\n\nback to main page with \nAnalyze data\n\n\nSummary\n\n\nWhat have we learned?\n\n\n\n\nThe Galaxy interface has tools on the left, viewing pane in the middle, and a history of your data analysis on the right.\n\n\nYou can create a new history for each analysis. All your histories are saved.\n\n\nUpload data from your computer or from a web address.\n\n\nYou can also upload data (and analyses) by importing a history.\n\n\nChoose a tool and change any settings for your analysis.\n\n\nRun the tool. The output files will be saved at the top of your history.\n\n\nView the output files by clicking on the eye icon.\n\n\nLog out of Galaxy-Au. When you log back in, your histories will all be there.\n\n\n\n\nWhat\ns next\n\n\ntry:\n- MB Galaxy intro tutorial [needs updating for Galaxy-Au]\n\n\nMove this stuff:\n\n\n[move this stuff below into the relevant individual workshops, to import a history for each of them: ]", 
            "title": "Starting with Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#starting-with-galaxy", 
            "text": "", 
            "title": "Starting with Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#what-is-galaxy", 
            "text": "Galaxy is a web-based analysis and workflow platform.   Designed for biologists  Easily accessible via a web page  Free to use  You can upload your own data  You can access shared data  Use common bioinformatics tools  Develop workflows   In this set of tutorials, we are using  Galaxy-Australia .   We access Galaxy-Australia by going to a web page with this address: [add address]  However, there are many different Galaxy servers available. Some of them have a set of general tools, and some have been developed for particular analyses. You can use more than one Galaxy server but you will need to register separately for each one, and they don t share data between them. A list of Galaxy servers is  here .  More information about the Galaxy project can be found  here .   The Galaxy-Australia page looks like this:  [replace with Galaxy-Au screenshot]    Tools  on the left  Viewing  panel in the middle  History  of analysis and files on the right", 
            "title": "What is Galaxy?"
        }, 
        {
            "location": "/modules/galaxy/#can-i-use-galaxy", 
            "text": "Yes!   Galaxy is free to use and available for everyone.  Australian researchers may find Galaxy-Australia particularly suited to their analysis needs as it has been developed in consultation with scientists across the country.", 
            "title": "Can I use Galaxy?"
        }, 
        {
            "location": "/modules/galaxy/#how-do-i-get-started", 
            "text": "To use Galaxy-Australia, follow these steps:   Open your internet browser. Use Firefox, Chrome or Safari (not Internet Explorer).  Open a new tab.  In the address bar, type in the address of Galaxy-Australia [add address].   [update image]   Click on  User  button on the right.  [update image]    Select:  User   Register  Enter your email, choose a password, and choose a user name.   Click  Submit    Login, and refresh the page.    Each time you use this Galaxy server, log in to see your data and histories.   You have [amount of storage]  Your data will stay stored for [amount of time.]  If you are using a different Galaxy server, you would need to register/log in to that server.", 
            "title": "How do I get started?"
        }, 
        {
            "location": "/modules/galaxy/#how-to-use-galaxy", 
            "text": "Available tools are in the left hand panel. Find the tool you want or use the search bar at the top of the tools.    Click on the tool you want to use.    The tool interface will appear in the centre Galaxy panel. Check the settings.    Click  Execute .    When the tool has finished, output file(s) will appear at the top of your  Current History  in the right hand panel.    Click on the eye icon next to a file to view it.    To access older histories, use the button at the top right of the History panel.", 
            "title": "How to use Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#exercise-1", 
            "text": "", 
            "title": "Exercise 1"
        }, 
        {
            "location": "/modules/galaxy/#name-your-current-history", 
            "text": "name  enter", 
            "title": "Name your current history"
        }, 
        {
            "location": "/modules/galaxy/#upload-a-file", 
            "text": "from Zenodo  e.g. 1 x fastQ file - download to your computer\nGalaxy - get data - upload file - choose local file", 
            "title": "Upload a file"
        }, 
        {
            "location": "/modules/galaxy/#use-a-tool", 
            "text": "e.g. FASTQC", 
            "title": "Use a tool"
        }, 
        {
            "location": "/modules/galaxy/#view-results", 
            "text": "click on file name", 
            "title": "View results"
        }, 
        {
            "location": "/modules/galaxy/#exercise-2", 
            "text": "", 
            "title": "Exercise 2"
        }, 
        {
            "location": "/modules/galaxy/#create-a-new-history", 
            "text": "", 
            "title": "Create a new history"
        }, 
        {
            "location": "/modules/galaxy/#import-some-data", 
            "text": "from Zenodo  e.g. 2 x fastq files  Copy this link:  add in zenodo link  change the file name  change the file type  Use a tool - e.g. Pear  View results", 
            "title": "Import some data"
        }, 
        {
            "location": "/modules/galaxy/#exercise-3", 
            "text": "", 
            "title": "Exercise 3"
        }, 
        {
            "location": "/modules/galaxy/#import-a-history-from-galaxy-au", 
            "text": "add a simple history to Galaxy Au  import  e.g. 2 x fastq files and a reference genome  For Galaxy-Australia users, import the following history:  [add this history to Galaxy-Au]   In Galaxy, go to the top menu bar   Click on  Shared Data    From the drop down menu, click on  Histories    [update image]    From the list of Published Histories, click  name of history   [update image]    In the top right, click on  Import history     This history will now be in your  Current history  - the right hand pane in Galaxy.  There should be XX files. (The number in front of the file name is not important.)   [update image]", 
            "title": "Import a history from Galaxy-Au"
        }, 
        {
            "location": "/modules/galaxy/#use-a-tool_1", 
            "text": "Use a tool - e.g. freebayes", 
            "title": "Use a tool"
        }, 
        {
            "location": "/modules/galaxy/#filter-results", 
            "text": "then filter results", 
            "title": "Filter results"
        }, 
        {
            "location": "/modules/galaxy/#view-results_1", 
            "text": "View results", 
            "title": "View results"
        }, 
        {
            "location": "/modules/galaxy/#exercise-4-import-a-shared-history-from-a-link", 
            "text": "Click on the  History  cog   Select  Import from File     In the box called  Archived History URL , paste in the link address to the Galaxy history (that you copied above).  Click  Submit  Wait a few seconds.  Click on the  view all histories  button   See if the Galaxy history has been imported: it will be called  imported from archive: Data  Above that pane, click on the  Switch to  button.  Then click  Done  (in the top left corner).  You should now have a list of five files in your current history. We will use these for the Genomics Workshop; or see below for additional files.", 
            "title": "Exercise 4 - Import a shared history from a link"
        }, 
        {
            "location": "/modules/galaxy/#exercise-5", 
            "text": "", 
            "title": "Exercise 5"
        }, 
        {
            "location": "/modules/galaxy/#re-run-a-tool", 
            "text": "with changed settings.", 
            "title": "Re-run a tool"
        }, 
        {
            "location": "/modules/galaxy/#exercise-6", 
            "text": "", 
            "title": "Exercise 6"
        }, 
        {
            "location": "/modules/galaxy/#look-at-all-your-histories", 
            "text": "create a new history  you can drag files between histories  drag some files in  back to main page with  Analyze data", 
            "title": "Look at all your histories"
        }, 
        {
            "location": "/modules/galaxy/#summary", 
            "text": "What have we learned?   The Galaxy interface has tools on the left, viewing pane in the middle, and a history of your data analysis on the right.  You can create a new history for each analysis. All your histories are saved.  Upload data from your computer or from a web address.  You can also upload data (and analyses) by importing a history.  Choose a tool and change any settings for your analysis.  Run the tool. The output files will be saved at the top of your history.  View the output files by clicking on the eye icon.  Log out of Galaxy-Au. When you log back in, your histories will all be there.", 
            "title": "Summary"
        }, 
        {
            "location": "/modules/galaxy/#whats-next", 
            "text": "try:\n- MB Galaxy intro tutorial [needs updating for Galaxy-Au]", 
            "title": "What's next"
        }, 
        {
            "location": "/modules/galaxy/#move-this-stuff", 
            "text": "[move this stuff below into the relevant individual workshops, to import a history for each of them: ]", 
            "title": "Move this stuff:"
        }, 
        {
            "location": "/modules/fastqc/", 
            "text": "FastQC in Galaxy\n\n\n\n\n\nAfter sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is \nhere.\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nrun FastQC on input sequence reads, and\n\n\nexamine the FastQC output.\n\n\n\n\nInput files\n\n\nSee \nhere\n for information about how to start with Galaxy, and \nhere\n for the link to import the \nGalaxy history of input files\n for this tutorial, if you don\nt already have them in your history.\n\n\n\n\nWe will use the paired-end read set from our Galaxy history.\n\n\nThese are the files \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\nFASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this \nlink\n.\n\n\nWe will evaluate the \nmutant_R1.fastq\n reads using the FastQC tool.\n\n\n\n\nRun FastQC\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: QC and Manipulation \n FastQC\n\n\n\n\n\n\n\n\nfor \nShort read data from your current history\n: \nmutant_R1.fastq\n\n\nClick \nExecute\n\n\nIn the History pane, click on the \nrefresh\n icon to see if the analysis has finished.\n\n\n\n\nExamine output files\n\n\nOnce finished, examine the output called \nFastQC on data1:webpage\n (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.\n\n\nLook at:\n\n\n\n\n\n\nBasic Statistics\n\n\n\n\nSequence length\n: will be important in setting maximum k-mer size value for assembly.\n\n\nEncoding\n: The quality encoding type is important for quality trimming software.\n\n\n% GC\n: high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.\n\n\nTotal sequences\n: Total number of reads: gives you an idea of coverage.\n\n\n\n\n\n\n\n\nPer base sequence quality\n: Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).\n\n\n\n\n\n\n\n\n\n\n\n\nPer base N content\n: Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.\n\n\n\n\n\n\nKmer content\n: Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers. \n\n\n\n\n\n\n\n\nWe have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.\n\n\nGeneral questions you might ask about your input reads include:\n\n\n\n\nHow good is my read set?\n\n\nDo I need to ask for a new sequencing run?  \n\n\nIs it suitable for the analysis I need to do?\n\n\n\n\nFor a fuller discussion of FastQC outputs and warnings, see the \nFastQC website link\n, including the section on each of the output \nreports\n, and examples of \ngood\n and \nbad\n Illumina data.\n\n\nWhat Next?\n\n\nAssemble the reads into a draft genome sequence\n.", 
            "title": "Quality control"
        }, 
        {
            "location": "/modules/fastqc/#fastqc-in-galaxy", 
            "text": "After sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is  here.", 
            "title": "FastQC in Galaxy"
        }, 
        {
            "location": "/modules/fastqc/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   run FastQC on input sequence reads, and  examine the FastQC output.", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/fastqc/#input-files", 
            "text": "See  here  for information about how to start with Galaxy, and  here  for the link to import the  Galaxy history of input files  for this tutorial, if you don t already have them in your history.   We will use the paired-end read set from our Galaxy history.  These are the files  mutant_R1.fastq  and  mutant_R2.fastq .  FASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this  link .  We will evaluate the  mutant_R1.fastq  reads using the FastQC tool.", 
            "title": "Input files"
        }, 
        {
            "location": "/modules/fastqc/#run-fastqc", 
            "text": "Go to  Tools   NGS Analysis   NGS: QC and Manipulation   FastQC     for  Short read data from your current history :  mutant_R1.fastq  Click  Execute  In the History pane, click on the  refresh  icon to see if the analysis has finished.", 
            "title": "Run FastQC"
        }, 
        {
            "location": "/modules/fastqc/#examine-output-files", 
            "text": "Once finished, examine the output called  FastQC on data1:webpage  (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.  Look at:    Basic Statistics   Sequence length : will be important in setting maximum k-mer size value for assembly.  Encoding : The quality encoding type is important for quality trimming software.  % GC : high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.  Total sequences : Total number of reads: gives you an idea of coverage.     Per base sequence quality : Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).       Per base N content : Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.    Kmer content : Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers.      We have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.  General questions you might ask about your input reads include:   How good is my read set?  Do I need to ask for a new sequencing run?    Is it suitable for the analysis I need to do?   For a fuller discussion of FastQC outputs and warnings, see the  FastQC website link , including the section on each of the output  reports , and examples of  good  and  bad  Illumina data.", 
            "title": "Examine output files"
        }, 
        {
            "location": "/modules/fastqc/#what-next", 
            "text": "Assemble the reads into a draft genome sequence .", 
            "title": "What Next?"
        }, 
        {
            "location": "/modules/spades/", 
            "text": "Assembly using Spades\n\n\nSpades is one of a number of \nde novo\n assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this \nlink\n.\n\n\nThe data\n\n\nThe read set for today is from an imaginary \nStaphylococcus aureus\n bacterium with a miniature genome.\n\n\n\n\n\n\nThe whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.\n\n\n\n\n\n\nThe files we need for assembly are the \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\n\n\n\n\n(We don\nt need the reference genome sequences for this tutorial).\n\n\n\n\n\n\nThe reads are paired-end.\n\n\n\n\n\n\nEach read is 150 bases long. \n\n\n\n\n\n\nThe number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).\n\n\n\n\n\n\nImport the data\n\n\nLog in to Galaxy-Au\n\n\nCreat a new history for this analysis\n\n\nGo to Zenodo:\nhttp://doi.org/10.5281/zenodo.582600\n\n\nmutant_R1.fastq\n\n\nRight click on file name: select \ncopy link address\n\n\nIn Galaxy, Get Data -\n Upload File\nPaste/Fetch data\npaste in link address\nStart\nClose\n\n\nChange name\nCheck data type. should be fastqsanger\n\n\nrepeat for mutant_R2\n\n\n\n\n\n\n\nClick on the View Data button (the \n) next to one of the FASTQ sequence files.\n\n\n\n\n\n\n\nAssemble the reads\n\n\n\n\n\n\nWe will perform a \nde novo\n assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)\n\n\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: Assembly \n spades\n\n\n\n\n\n\nSet the following parameters (leave other settings as they are):\n\n\n\n\nRun only Assembly\n: \nYes\n [the \nYes\n button should be darker grey]\n\n\nKmers to use separated by commas:\n \n33,55,91\n  [note: no spaces]  \n\n\nCoverage cutoff:\n \nauto\n  \n\n\nFiles \n Forward reads:\n \nmutant_R1.fastq\n  \n\n\nFiles \n Reverse reads:\n \nmutant_R2.fastq\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\nExamine the output\n\n\n\n\nGalaxy is now running Spades on the reads for you.\n\n\n\n\nWhen it is finished, you will have five (or more) new files in your history, including:\n\n\n\n\ntwo FASTA files of the resulting contigs and scaffolds\n\n\ntwo files for statistics about these\n\n\nthe Spades logfile\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the View Data button \n on each of the files.\n\n\nNote that the short reads have been assembled into much longer contigs.\n\n\n(However, in this case, the contigs have not been assembled into larger scaffolds.)\n\n\nThe stats files will give you the length of each of the contigs, and the file should look something like this:", 
            "title": "Genome assembly"
        }, 
        {
            "location": "/modules/spades/#assembly-using-spades", 
            "text": "Spades is one of a number of  de novo  assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this  link .", 
            "title": "Assembly using Spades"
        }, 
        {
            "location": "/modules/spades/#the-data", 
            "text": "The read set for today is from an imaginary  Staphylococcus aureus  bacterium with a miniature genome.    The whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.    The files we need for assembly are the  mutant_R1.fastq  and  mutant_R2.fastq .    (We don t need the reference genome sequences for this tutorial).    The reads are paired-end.    Each read is 150 bases long.     The number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).", 
            "title": "The data"
        }, 
        {
            "location": "/modules/spades/#import-the-data", 
            "text": "Log in to Galaxy-Au  Creat a new history for this analysis  Go to Zenodo:\nhttp://doi.org/10.5281/zenodo.582600  mutant_R1.fastq  Right click on file name: select  copy link address  In Galaxy, Get Data -  Upload File\nPaste/Fetch data\npaste in link address\nStart\nClose  Change name\nCheck data type. should be fastqsanger  repeat for mutant_R2    Click on the View Data button (the  ) next to one of the FASTQ sequence files.", 
            "title": "Import the data"
        }, 
        {
            "location": "/modules/spades/#assemble-the-reads", 
            "text": "We will perform a  de novo  assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)    Go to  Tools   NGS Analysis   NGS: Assembly   spades    Set the following parameters (leave other settings as they are):   Run only Assembly :  Yes  [the  Yes  button should be darker grey]  Kmers to use separated by commas:   33,55,91   [note: no spaces]    Coverage cutoff:   auto     Files   Forward reads:   mutant_R1.fastq     Files   Reverse reads:   mutant_R2.fastq        Your tool interface should look like this:      Click  Execute", 
            "title": "Assemble the reads"
        }, 
        {
            "location": "/modules/spades/#examine-the-output", 
            "text": "Galaxy is now running Spades on the reads for you.   When it is finished, you will have five (or more) new files in your history, including:   two FASTA files of the resulting contigs and scaffolds  two files for statistics about these  the Spades logfile       Click on the View Data button   on each of the files.  Note that the short reads have been assembled into much longer contigs.  (However, in this case, the contigs have not been assembled into larger scaffolds.)  The stats files will give you the length of each of the contigs, and the file should look something like this:", 
            "title": "Examine the output"
        }, 
        {
            "location": "/modules/prokka/", 
            "text": "Genome annotation using Prokka\n\n\nKeywords: annotation, Prokka, JBrowse, Galaxy, Microbial Genomics Virtual Lab\n\n\nBackground\n\n\nIn this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous \ntutorial\n. Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.\n\n\nProkka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using \nProdigal\n; second, the \nfunction\n of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found \nhere\n.\n\n\nLearning objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nload a genome assembly into Prokka\n\n\nannotate the assembly using Prokka\n\n\nexamine the annotated genome using JBrowse\n\n\n\n\nInput data\n\n\nProkka requires assembled contigs.\n\n\n\n\n\n\nIf you are continuing on from the previous workshop (\nAssembly with Spades\n), this file will be in your current history named something like \nSPAdes contigs(fasta)\n. \n\n\n\n\n\n\nOr, if you have uploaded the history of workshop files, there is also a copy in your history called \nSPAdes_contigs.fasta\n. Either copy is fine to use. \n\n\n\n\n\n\nAlternatively, get the file called \nassembled contigs\n from the \nTraining dataset page.\n\n\n\n\n\n\n\n\n\nRun Prokka\n\n\n\n\nIn Galaxy, go to \nTools \n NGS Analysis \n NGS: Annotation \n Prokka\n  \n\n\nSet the following parameters (leave everything else unchanged):\n\n\nContigs to annotate\n: \nSPAdes contigs (fasta)\n  \n\n\nLocus tag prefix (\nlocustag)\n: P\n\n\nForce GenBank/ENA/DDJB compliance (\ncompliant)\n: \nNo\n\n\nSequencing Centre ID (\ncentre)\n: V\n\n\nGenus Name\n: \nStaphylococcus\n  \n\n\nSpecies Name\n: \naureus\n  \n\n\nUse genus-specific BLAST database\n \nNo\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n  \n\n\n\n\nExamine the output\n\n\n\n\n\nOnce Prokka has finished, examine each of its output files.\n\n\n\n\nThe \nGFF\n and \nGBK\n files contain all of the information about the features annotated (in different formats.)\n\n\nThe \n.txt\n file contains a summary of the number of features annotated.\n\n\nThe \n.faa\n file contains the protein sequences of the genes annotated.\n\n\nThe \n.ffn\n file contains the nucleotide sequences of the genes annotated.\n\n\n\n\nView annotated features in JBrowse\n\n\nNow that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.\n\n\n\n\n\n\nGo to the Galaxy tool panel, and use the top search box to search for \nJBrowse\n. \n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nUnder \nSelect the reference genome\n choose \nProkka on data XX:fna\n. This .fna sequence is the fasta nucleotide sequence, and will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nClick \nInsert Track Group\n\n\n\n\n\n\nUnder \nTrack Category\n type in \ngene annotations\n.\n\n\n\n\n\n\nClick \nInsert Annotation Track\n\n\n\n\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\n\n\n\n\nFor \nGFF/GFF3/BED Track Data\n select \nProkka on data XX:gff\n  [Note: not wildtype.gff]\n\n\n\n\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\n\n\n\n\nClick on \nJBrowse Styling Options \n\n\n\n\n\n\nUnder \nJBrowse style.label\n add in \nproduct\n.\n\n\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nUnder \nAvailable Tracks\n on the left, tick the box for \nProkka on data XX:gff\n.\n\n\n\n\n\n\nSelect contig 1 in the drop down box. You can only see one contig displayed at a time.\n\n\n\n\n\n\n\n\n\n\n\n\nUse the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).\n\n\n\n\n\n\nZoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.\n\n\n\n\n\n\nZoomed in view:\n\n\n\n\n\n\nRight click on a gene/feature annotation (the bars on the annotation track), then select \nView Details\n to see more information.\n\n\ngene name\n\n\nproduct name\n\n\nyou can download the FASTA sequence by clicking on the disk icon.", 
            "title": "Genome annotation"
        }, 
        {
            "location": "/modules/prokka/#genome-annotation-using-prokka", 
            "text": "Keywords: annotation, Prokka, JBrowse, Galaxy, Microbial Genomics Virtual Lab", 
            "title": "Genome annotation using Prokka"
        }, 
        {
            "location": "/modules/prokka/#background", 
            "text": "In this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous  tutorial . Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.  Prokka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using  Prodigal ; second, the  function  of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found  here .", 
            "title": "Background"
        }, 
        {
            "location": "/modules/prokka/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   load a genome assembly into Prokka  annotate the assembly using Prokka  examine the annotated genome using JBrowse", 
            "title": "Learning objectives"
        }, 
        {
            "location": "/modules/prokka/#input-data", 
            "text": "Prokka requires assembled contigs.    If you are continuing on from the previous workshop ( Assembly with Spades ), this file will be in your current history named something like  SPAdes contigs(fasta) .     Or, if you have uploaded the history of workshop files, there is also a copy in your history called  SPAdes_contigs.fasta . Either copy is fine to use.     Alternatively, get the file called  assembled contigs  from the  Training dataset page.", 
            "title": "Input data"
        }, 
        {
            "location": "/modules/prokka/#run-prokka", 
            "text": "In Galaxy, go to  Tools   NGS Analysis   NGS: Annotation   Prokka     Set the following parameters (leave everything else unchanged):  Contigs to annotate :  SPAdes contigs (fasta)     Locus tag prefix ( locustag) : P  Force GenBank/ENA/DDJB compliance ( compliant) :  No  Sequencing Centre ID ( centre) : V  Genus Name :  Staphylococcus     Species Name :  aureus     Use genus-specific BLAST database   No        Your tool interface should look like this:    Click  Execute", 
            "title": "Run Prokka"
        }, 
        {
            "location": "/modules/prokka/#examine-the-output", 
            "text": "Once Prokka has finished, examine each of its output files.   The  GFF  and  GBK  files contain all of the information about the features annotated (in different formats.)  The  .txt  file contains a summary of the number of features annotated.  The  .faa  file contains the protein sequences of the genes annotated.  The  .ffn  file contains the nucleotide sequences of the genes annotated.", 
            "title": "Examine the output"
        }, 
        {
            "location": "/modules/prokka/#view-annotated-features-in-jbrowse", 
            "text": "Now that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.    Go to the Galaxy tool panel, and use the top search box to search for  JBrowse .     Under  Reference genome to display  choose  Use a genome from history .    Under  Select the reference genome  choose  Prokka on data XX:fna . This .fna sequence is the fasta nucleotide sequence, and will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    Click  Insert Track Group    Under  Track Category  type in  gene annotations .    Click  Insert Annotation Track    For  Track Type  choose  GFF/GFF3/BED/GBK Features    For  GFF/GFF3/BED Track Data  select  Prokka on data XX:gff   [Note: not wildtype.gff]    Under  JBrowse Track Type[Advanced]  select  Canvas Features .    Click on  JBrowse Styling Options     Under  JBrowse style.label  add in  product .    Under  Track Visibility  choose  On for new users .    Your tool interface should look like this:      Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    Under  Available Tracks  on the left, tick the box for  Prokka on data XX:gff .    Select contig 1 in the drop down box. You can only see one contig displayed at a time.       Use the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).    Zoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.    Zoomed in view:    Right click on a gene/feature annotation (the bars on the annotation track), then select  View Details  to see more information.  gene name  product name  you can download the FASTA sequence by clicking on the disk icon.", 
            "title": "View annotated features in JBrowse"
        }, 
        {
            "location": "/modules/snippy/", 
            "text": "Variant calling with Snippy\n\n\nKeywords: variant calling, SNP, Snippy, JBrowse, Galaxy, Microbial Genomics Virtual Lab\n\n\nBackground\n\n\nVariant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by \nvariant calling\n.\n\n\nIn this tutorial, we will use the tool \nSnippy\n (link to Snippy is \nhere\n). Snippy uses a tool to align the reads to a reference genome, and another tool to decide (\ncall\n) if the discrepancies are real variants.\n\n\nLearning Objectives\n\n\n\n\nFind variants between a reference genome and a set of reads\n\n\nVisualise the SNP in context of the reads aligned to the genome\n\n\nDetermine the effect of those variants on genomic features\n\n\nUnderstand if the SNP is potentially affecting the phenotype\n\n\n\n\nPrepare reference\n\n\n\n\n\n\n\n\nFor variant calling, we need a reference genome that is of the same strain as the input sequence reads.\n\n\nFor this tutorial, our reference is the \nwildtype.gbk\n file and our reads are \nmutant_R1.fastq\n and \nmutant_R2.fastq\n. \n\n\nIf these files are not presently in your Galaxy history, import them from the \nTraining dataset page.\n\n\nCall variants with Snippy\n\n\n\n\nGo to the Galaxy tools panel, and use the search box at the top to search for \nsnippy\n. \n\n\nFor \nReference type\n select \nGenbank\n.\n\n\nThen for \nReference Genbank\n choose the \nwildtype.gbk\n file.\n\n\nFor \nSingle or Paired-end reads\n choose \nPaired\n.\n\n\nThen choose the first set of reads, \nmutant_R1.fastq\n and second set of reads, \nmutant_R2.fastq\n.\n\n\nFor \nCleanup the non-snp output files\n select \nNo\n.\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n.\n\n\n\n\nExamine Snippy output\n\n\n\n\n\nFrom Snippy, there are 10 output files in various formats.\n\n\n\n\nGo to the file called \nsnippy on data XX, data XX and data XX table\n and click on the eye icon.\n\n\nWe can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.\n\n\nLook at the third variant called. This is a T\nA mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation? \n\n\n\n\nView Snippy output in JBrowse\n\n\n\n\n\n\nGo to the Galaxy tools panel, and use the search box at the top to search for \nJBrowse\n. \n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nUnder \nSelect the reference genome\n choose \nwildtype.fna\n. This sequence will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nWe will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)\n\n\n\n\n\n\nTrack 1 - sequence reads\n\n\n\n\nClick \nInsert Track Group\n\n\nFor \nTrack Cateogry\n name it \nsequence reads\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nBAM Pileups\n\n\nFor \nBAM Track Data\n select \nthe snippy bam file\n\n\nFor \nAutogenerate SNP Track\n select \nYes\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\nTrack 2 - variants\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \nTrack Category\n name it \nvariants\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nTrack Data\n select \nthe snippy snps gff file\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\nTrack 3 - annotated reference\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \n Track Category\n name it \nannotated reference\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nTrack Data\n select \nwildtype.gff\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\nClick on \nJBrowse Styling Options \n\n\nUnder \nJBrowse style.label\n add in the word \nproduct\n.\n\n\nUnder \nJBrowse style.description\n add in the word \nproduct\n.\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nOn the left, tick boxes to display the tracks\n\n\n\n\n\n\nUse the minus button to zoom out to see:\n\n\n\n\nsequence reads and their coverage (the grey graph)\n\n\n\n\n\n\n\n\nUse the plus button to zoom in to see:\n\n\n\n\nprobable real variants (a whole column of snps)\n\n\nprobable errors (single one here and there)\n\n\n\n\n\n\n\n\n\n\n\n\nIn the coordinates box, type in \n47299\n and then \nGo\n to see the position of the SNP discussed above.\n\n\nthe correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.\n\n\nthe mutation of T \n A turns this triplet into TGA, a stop codon.", 
            "title": "Variant calling"
        }, 
        {
            "location": "/modules/snippy/#variant-calling-with-snippy", 
            "text": "Keywords: variant calling, SNP, Snippy, JBrowse, Galaxy, Microbial Genomics Virtual Lab", 
            "title": "Variant calling with Snippy"
        }, 
        {
            "location": "/modules/snippy/#background", 
            "text": "Variant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by  variant calling .  In this tutorial, we will use the tool  Snippy  (link to Snippy is  here ). Snippy uses a tool to align the reads to a reference genome, and another tool to decide ( call ) if the discrepancies are real variants.", 
            "title": "Background"
        }, 
        {
            "location": "/modules/snippy/#learning-objectives", 
            "text": "Find variants between a reference genome and a set of reads  Visualise the SNP in context of the reads aligned to the genome  Determine the effect of those variants on genomic features  Understand if the SNP is potentially affecting the phenotype", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/snippy/#prepare-reference", 
            "text": "For variant calling, we need a reference genome that is of the same strain as the input sequence reads.  For this tutorial, our reference is the  wildtype.gbk  file and our reads are  mutant_R1.fastq  and  mutant_R2.fastq .   If these files are not presently in your Galaxy history, import them from the  Training dataset page.", 
            "title": "Prepare reference"
        }, 
        {
            "location": "/modules/snippy/#call-variants-with-snippy", 
            "text": "Go to the Galaxy tools panel, and use the search box at the top to search for  snippy .   For  Reference type  select  Genbank .  Then for  Reference Genbank  choose the  wildtype.gbk  file.  For  Single or Paired-end reads  choose  Paired .  Then choose the first set of reads,  mutant_R1.fastq  and second set of reads,  mutant_R2.fastq .  For  Cleanup the non-snp output files  select  No .   Your tool interface should look like this:    Click  Execute .", 
            "title": "Call variants with Snippy"
        }, 
        {
            "location": "/modules/snippy/#examine-snippy-output", 
            "text": "From Snippy, there are 10 output files in various formats.   Go to the file called  snippy on data XX, data XX and data XX table  and click on the eye icon.  We can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.  Look at the third variant called. This is a T A mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation?", 
            "title": "Examine Snippy output"
        }, 
        {
            "location": "/modules/snippy/#view-snippy-output-in-jbrowse", 
            "text": "Go to the Galaxy tools panel, and use the search box at the top to search for  JBrowse .     Under  Reference genome to display  choose  Use a genome from history .    Under  Select the reference genome  choose  wildtype.fna . This sequence will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    We will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)    Track 1 - sequence reads   Click  Insert Track Group  For  Track Cateogry  name it  sequence reads  Click  Insert Annotation Track  For  Track Type  choose  BAM Pileups  For  BAM Track Data  select  the snippy bam file  For  Autogenerate SNP Track  select  Yes  Under  Track Visibility  choose  On for new users .   Track 2 - variants   Click  Insert Track Group  again  For  Track Category  name it  variants  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  Track Data  select  the snippy snps gff file  Under  Track Visibility  choose  On for new users .   Track 3 - annotated reference   Click  Insert Track Group  again  For   Track Category  name it  annotated reference  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  Track Data  select  wildtype.gff  Under  JBrowse Track Type[Advanced]  select  Canvas Features .  Click on  JBrowse Styling Options   Under  JBrowse style.label  add in the word  product .  Under  JBrowse style.description  add in the word  product .   Under  Track Visibility  choose  On for new users .    Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    On the left, tick boxes to display the tracks    Use the minus button to zoom out to see:   sequence reads and their coverage (the grey graph)     Use the plus button to zoom in to see:   probable real variants (a whole column of snps)  probable errors (single one here and there)       In the coordinates box, type in  47299  and then  Go  to see the position of the SNP discussed above.  the correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.  the mutation of T   A turns this triplet into TGA, a stop codon.", 
            "title": "View Snippy output in JBrowse"
        }, 
        {
            "location": "/modules/dge/", 
            "text": "Differential Gene Expression\n\n\nKeywords: differential gene expression, DGE, RNA, RNA-Seq, transcriptomics, Degust, voom, limma, Galaxy, Microbial Genomics Virtual Laboratory.\n\n\nThis tutorial is about differential gene expression in bacteria, using Galaxy tools and Degust (web).\n\n\n\n\n\nBackground\n\n\nDifferential Gene Expression (DGE) is the process of determining whether any genes were expressed at a different level between two conditions. For example, the conditions could be wildtype versus mutant, or two growth conditions. Usually multiple biological replicates are done for each condition - these are needed to separate variation within the condition from that between the conditions.\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nAlign RNA-Seq data to a reference genome  \n\n\nCount transcripts for each sample\n\n\nPerform statistical analysis to obtain a list of differentially expressed genes\n\n\nVisualize and interpret the results\n\n\n\n\nInput data: reads and reference\n\n\nRNA-Seq reads\n\n\nA typical experiment will have 2 conditions each with 3 replicates, for a total of 6 samples.\n\n\n\n\nOur RNA-seq reads are from 6 samples in \nFASTQ\n format.\n\n\nWe have single-end reads; so one file per sample.\n\n\nData could also be paired-end reads, and there would be two files per sample.\n\n\n\n\n\n\nThese have been reduced to 1% of their original size for this tutorial.\n\n\nThe experiment used the bacteria \nE. coli\n grown in two conditions.\n\n\nFiles labelled \nLB\n are the wildtype\n\n\nFiles labelled \nMG\n have been exposed to 0.5% \nMG - alpha methyglucoside (a sugar solution).\n\n\n\n\n\n\n\n\n\n\n\nReference genome\n\n\nThe reference genomes is in \nFASTA\n format and the gene annotations are in \nGTF\n format.\n\n\n\n\nThe \nFASTA\n file contains the DNA sequence(s) that make up the genome; e.g. the chromosome and any plasmids.\n\n\nThe \nGTF\n file lists the coordinates (position) of each feature. Commonly-annotated features are genes, transcripts and protein-coding sequences.\n\n\n\n\n\n\n\nUpload files to Galaxy\n\n\n\n\nLog in to your Galaxy server.\n\n\nIn the \nHistory\n pane, click on the cog\nicon, and select \nImport from File\n (at the bottom of the list).\n\n\nUnder \nArchived History URL\n paste:\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy-History-BacterialDGE.tar.gz\n\n\nIn the \nHistory\n pane, click on the view\nicon and find the uploaded history.\n\n\n(This may take a minute. Refresh the page.)\n\n\n\n\n\n\nClick \nSwitch to\n that history, then \nDone\n.\n\n\nThe files should now be ready to use in your current History pane.\n\n\n\n\n\n\nAlign reads to reference\n\n\nThe RNA-Seq reads are fragmented and are not complete transcripts. To determine the transcripts from which the reads originated (and therefore, to which gene they correspond) we can map them to a reference genome.\n\n\nIn Galaxy:\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: Mapping \n Map with BWA-MEM\n\n\nUnder \nWill you select a reference genome from your history or use a built-in index?\n: \nUse a genome from history and build index\n\n\nUse the following dataset as the reference sequence\n: \nEcoli_k12.fasta\n\n\nSingle or Paired-end reads\n: \nsingle\n\n\nSelect fastq dataset\n:\n\n\nClick on the \nMultiple Datasets\n icon in centre\n\n\nSelect all 6 \nFASTQ\n files (they turn blue; use side-scroll bar to check all have been selected)\n\n\nThis will map each set of reads to the reference genome\n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n\n\nClick \nRefresh\n in the history pane to see if the analysis has finished.\n\n\n\n\nOutput: 6 \nbam\n files of reads mapped to the reference genome.\n\n\n\n\n\n\nRe-name the output files:\n\n\n\n\nThese are called \nMap with BWA-MEM on data x and data x\n.\n\n\nClick on the pencil icon next to each of these and re-name them as their sample name (e.g. LB1, LB2 etc.).\n\n\nClick \nSave\n.\n\n\n\n\n\n\n\n\nCount reads per gene\n\n\nWe now need to count how many reads overlap with particular genes. The information about gene names is from the annotations in the GTF file.\n\n\nIn Galaxy:\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: RNA Analysis \n SAM/BAM to count matrix\n.\n\n\nNote: Don\nt select the tool called \nhtseq-count\n. The \nSAM/BAM to count matrix\n also uses that tool but allows an input of multiple bam files, which is what we want.\n\n\n\n\n\n\nFor \nGene model (GFF) file to count reads over from your current history\n, select the \nGTF\n file.\n\n\nFor \nReads are stranded\n select \nYes\n (box turns dark grey)\n\n\nFor \nGTF feature type for counting reads\n select \ntranscript\n.\n\n\nFor \nbam/sam file from your history\n choose the 6 \nbam\n files.\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n\n\nClick \nRefresh\n in the history pane to see if the analysis has finished.\n\n\n\n\nOutput:\n\n\n\n\nThere is one output file: \nbams to DGE count matrix\n.\n\n\nClick on the file name to expand the information in the History pane.\n\n\nClick on the file \nicon underneath to download it to your computer for use later on in this tutorial.\n\n\nClick on the eye icon to see this file.\n\n\n\n\n\n\n\n\nEach row is a gene (or feature) and each column is a sample, with counts against each gene.\n\n\nHave a look at how the counts vary between samples, per gene.\n\n\nWe can\nt just compare the counts directly; they need to be normalized before comparison, and this will be done as part of the DGE analysis in the next step.\n\n\n\n\nDGE in Degust\n\n\nDegust is a tool on the web that can analyse the counts files produced in the step above, to test for differential gene expression.\n\n\n(Degust can also display the results from DGE analyses performed elsewhere.)\n\n\nUpload counts file\n\n\nGo to the \nDegust web page\n. Click \nGet Started\n.\n\n\n\n\n\n\nClick on \nChoose File\n.\n\n\nSelect the \nhtseq output file. tabular\n (that you previously downloaded to your computer from Galaxy) and click \nOpen\n.\n\n\nClick \nUpload\n.\n\n\n\n\nA Configuation page will appear.\n\n\n\n\nFor \nName\n type \nDGE in E coli\n\n\nFor \nInfo columns\n select \nContig\n\n\nFor \nAnalyze server side\n leave box checked.\n\n\nFor \nMin read count\n put \n10\n.\n\n\nClick \nAdd condition\n\n\nAdd a condition called \nControl\n and select the LB columns.\n\n\nAdd a condition called \nTreament\n and select the MG columns.\n\n\n\n\n\n\n\n\nYour Configuration page should look like this:\n\n\n\n\n\n\nSave changes\n\n\nView\n - this brings up the Degust viewing window.\n\n\n\n\nOverview of Degust sections\n\n\n\n\nTop black panel with \nConfigure\n settings at right.\n\n\nLeft: Conditions: Control and Treatment.\n\n\nLeft: Method selection for DGE.\n\n\nTop centre: Plots, with options at right.\n\n\nWhen either of the expression plots are selected, a heatmap appears below.\n\n\nA table of genes (or features); expression in treatment relative to control (Treatment column); and significance (FDR column).  \n\n\n\n\n\n\nAnalyze gene expression\n\n\n\n\nUnder \nMethod\n, make sure that \nVoom/Limma\n is selected.\n\n\nClick \nApply\n. This runs Voom/Limma on the uploaded counts.\n\n\n\n\nMDS plot\n\n\nFirst, look at the MDS plot.\n\n\n\n\n\n\nThis is a multidimensional scaling plot which represents the variation between samples.\n\n\nIdeally:\n\n\nAll the LB samples would be close to each other\n\n\nAll the MG samples would be close to each other\n\n\nThe LB and MG groups would be far apart\n\n\n\n\n\n\nThe x-axis is the dimension with the highest magnitude. The control/treatment samples should be split along this axis.\n\n\nOur LB samples are on the left and the MG samples are on the right, which means they are well separated on their major MDS dimension, which looks correct.\n\n\n\n\nExpression - MA plot\n\n\nEach dot shows the change in expression in one gene.\n\n\n\n\nThe average expression (over both condition and treatment samples) is represented on the x-axis.\n\n\nPlot points should be symmetrical around the x-axis.\n\n\nWe can see that many genes are expressed at a low level, and some are highly expressed.\n\n\n\n\n\n\nThe fold change is represented on the y axis.\n\n\nIf expression is significantly different between treatment and control, the dots are red. If not, they are blue. (In Degust, significant means FDR \n0.05).\n\n\nAt low levels of gene expression (low values of the x axis), fold changes are less likely to be significant.\n\n\n\n\n\n\n\n\nClick on the dot to see the gene name.     \n\n\n\n\nExpression - Parallel Coordinates and heatmap\n\n\nEach line shows the change in expression in one gene, between control and treatment.\n\n\n\n\nGo to \nOptions\n at the right.\n\n\nFor \nFDR cut-off\n set at 0.001.\n\n\nThis is a significance level (an adjusted p value). We will set it quite low in this example, to ensure we only examine key differences.\n\n\n\n\n\n\n\n\nLook at the Parallel Coordinates plot. There are two axes:\n\n\n\n\nLeft: \nControl\n: Gene expression in the control samples. All values are set at zero.\n\n\nRight: \nTreatment\n Gene expression in the treatment samples, relative to expression in the control.\n\n\n\n\n\n\n\n\nThe blocks of blue and red underneath the plot are called a heatmap.\n\n\n\n\nEach block is a gene. Click on a block to see its line in the plot above.\n\n\nLook at the row for the Treatment. Relative to the control, genes expressed more are red; genes expressed less are blue.\n\n\n\n\n\n\n\n\n\n\nNote:\n\n\n\n\nfor an experiment with multiple treatments, the various treatment axes can be dragged to rearrange. There is no natural order (such as a time series).\n\n\n\n\nTable of genes\n\n\n\n\nContig\n: names of genes. Note that gene names are sometimes specific to a species, or they may be only named as a locus ID (a chromosomal location specified in the genome annotation).\n\n\nFDR\n: False Discovery Rate. This is an adjusted p value to show the significance of the difference in gene expression between two conditions. Click on column headings to sort. By default, this table is sorted by FDR.\n\n\nControl\n and \nTreatment\n: log2(Fold Change) of gene expression. The default display is of fold change in the treatment relative to the control. Therefore, values in the \nControl\n column are zero. This can be changed in the \nOptions\n panel at the top right.\n\n\nIn some cases, a large fold change will be meaningful but in others, even a small fold change can be important biologically.\n\n\n\n\nTable of genes and expression:\n\n\n\n\n\n\n\nDGE in Galaxy\n\n\nDifferential gene expression can also be analyzed in Galaxy. The input is the count matrix produced by a tool such as HTSeq-Count (see section above: \nCount reads per gene\n).\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: RNA Analysis \n Differential Count models\n\n\nThis has options to use edgeR, DESeq, or Voom. Here we will use Voom.\n\n\n\n\n\n\nFor \nSelect an input matrix\n choose the \ncount matrix\n file generated in the previous step.\n\n\nFor \nTitle for job outputs\n enter \nDGE using voom\n.\n\n\nFor \nSelect columns containing treatment\n tick boxes for the MG samples.\n\n\nFor \nSelect columns containing control\n tick boxes for the LB samples.\n\n\nUnder \nRun this model using edgeR\n choose \nDo not run edgeR\n.\n\n\nUnder \nRun the same model with DESeq2 and compare findings\n choose \nDo not run DESeq2\n.\n\n\nUnder \nRun the same model with Voom/limma and compare findings\n choose \nRun VOOM\n.\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n.\n\n\n\n\nThere are two output files.\n\n\nView the file called \nDGEusingvoom.html\n.\n\n\n\n\nScroll down to \nVOOM log output\n and \n#VOOM top 50\n.\n\n\nThe \nContig\n column has the gene names.\n\n\nLook at the \nadj.P.Val\n column. This is an adjusted p value to show the significance of the gene expression difference, accounting for the effect of multiple testing. Also known as False Discovery Rate. The table is ordered by the values in this column.\n\n\nLook at the \nlogFC\n column. This is log2(Fold Change) of relative gene expression between the treatment samples and the control samples.\n\n\n\n\nView the file called \nDEGusingvoom_topTable_VOOM.xls\n.\n\n\n\n\nThis is a list of all the genes that had transcripts mapped, and associated statistics.\n\n\n\n\nWhat next?\n\n\nTo learn more about the differentially-expressed genes:\n\n\n\n\nGo to \nthe NCBI website.\n\n\nUnder \nAll Databases\n, click on \nGene\n\n\nEnter the gene name in the search bar; e.g. ptsG\n\n\nClick on the first result that matches the species (e.g. in this case, \nE. coli\n).\n\n\nThis provides information about the gene, and may also show further references (e.g. in this case, a link to the EcoGene resource).\n\n\n\n\n\n\n\n\nSome of the most (statistically) significant differentially-expressed genes in this experiment are:\n\n\n\n\nptsG\n: a glucose-specific transporter.\n\n\nsetA\n: a sugar efflux transporter; is induced by glucose-phosphate stress.\n\n\nsucD\n: the alpha subunit of the the gene for succinyl-CoA synthetase; involved in ATP production.\n\n\nsucB\n: a component of the 2-oxoglutarate dehydrogenase complex; catalyzes a step in the Krebs cycle.\n\n\ndeoC\n: 2-deoxyribose-5-phosphate aldolase; binds selenium; may be involved in selenium transport.\n\n\n\n\nNext steps: Investigate the biochemical pathways involving the genes of interest.\n\n\nMore information\n\n\n\n\nLink to Degust.\n\n\nLink to Voom paper.", 
            "title": "Differential gene expression"
        }, 
        {
            "location": "/modules/dge/#differential-gene-expression", 
            "text": "Keywords: differential gene expression, DGE, RNA, RNA-Seq, transcriptomics, Degust, voom, limma, Galaxy, Microbial Genomics Virtual Laboratory.  This tutorial is about differential gene expression in bacteria, using Galaxy tools and Degust (web).", 
            "title": "Differential Gene Expression"
        }, 
        {
            "location": "/modules/dge/#background", 
            "text": "Differential Gene Expression (DGE) is the process of determining whether any genes were expressed at a different level between two conditions. For example, the conditions could be wildtype versus mutant, or two growth conditions. Usually multiple biological replicates are done for each condition - these are needed to separate variation within the condition from that between the conditions.", 
            "title": "Background"
        }, 
        {
            "location": "/modules/dge/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   Align RNA-Seq data to a reference genome    Count transcripts for each sample  Perform statistical analysis to obtain a list of differentially expressed genes  Visualize and interpret the results", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/dge/#input-data-reads-and-reference", 
            "text": "RNA-Seq reads  A typical experiment will have 2 conditions each with 3 replicates, for a total of 6 samples.   Our RNA-seq reads are from 6 samples in  FASTQ  format.  We have single-end reads; so one file per sample.  Data could also be paired-end reads, and there would be two files per sample.    These have been reduced to 1% of their original size for this tutorial.  The experiment used the bacteria  E. coli  grown in two conditions.  Files labelled  LB  are the wildtype  Files labelled  MG  have been exposed to 0.5%  MG - alpha methyglucoside (a sugar solution).      Reference genome  The reference genomes is in  FASTA  format and the gene annotations are in  GTF  format.   The  FASTA  file contains the DNA sequence(s) that make up the genome; e.g. the chromosome and any plasmids.  The  GTF  file lists the coordinates (position) of each feature. Commonly-annotated features are genes, transcripts and protein-coding sequences.    Upload files to Galaxy   Log in to your Galaxy server.  In the  History  pane, click on the cog icon, and select  Import from File  (at the bottom of the list).  Under  Archived History URL  paste: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy-History-BacterialDGE.tar.gz  In the  History  pane, click on the view icon and find the uploaded history.  (This may take a minute. Refresh the page.)    Click  Switch to  that history, then  Done .  The files should now be ready to use in your current History pane.", 
            "title": "Input data: reads and reference"
        }, 
        {
            "location": "/modules/dge/#align-reads-to-reference", 
            "text": "The RNA-Seq reads are fragmented and are not complete transcripts. To determine the transcripts from which the reads originated (and therefore, to which gene they correspond) we can map them to a reference genome.  In Galaxy:   Go to  Tools   NGS Analysis   NGS: Mapping   Map with BWA-MEM  Under  Will you select a reference genome from your history or use a built-in index? :  Use a genome from history and build index  Use the following dataset as the reference sequence :  Ecoli_k12.fasta  Single or Paired-end reads :  single  Select fastq dataset :  Click on the  Multiple Datasets  icon in centre  Select all 6  FASTQ  files (they turn blue; use side-scroll bar to check all have been selected)  This will map each set of reads to the reference genome     Your tool interface should look like this:    Click  Execute  Click  Refresh  in the history pane to see if the analysis has finished.   Output: 6  bam  files of reads mapped to the reference genome.    Re-name the output files:   These are called  Map with BWA-MEM on data x and data x .  Click on the pencil icon next to each of these and re-name them as their sample name (e.g. LB1, LB2 etc.).  Click  Save .", 
            "title": "Align reads to reference"
        }, 
        {
            "location": "/modules/dge/#count-reads-per-gene", 
            "text": "We now need to count how many reads overlap with particular genes. The information about gene names is from the annotations in the GTF file.  In Galaxy:   Go to  Tools   NGS Analysis   NGS: RNA Analysis   SAM/BAM to count matrix .  Note: Don t select the tool called  htseq-count . The  SAM/BAM to count matrix  also uses that tool but allows an input of multiple bam files, which is what we want.    For  Gene model (GFF) file to count reads over from your current history , select the  GTF  file.  For  Reads are stranded  select  Yes  (box turns dark grey)  For  GTF feature type for counting reads  select  transcript .  For  bam/sam file from your history  choose the 6  bam  files.   Your tool interface should look like this:    Click  Execute  Click  Refresh  in the history pane to see if the analysis has finished.   Output:   There is one output file:  bams to DGE count matrix .  Click on the file name to expand the information in the History pane.  Click on the file  icon underneath to download it to your computer for use later on in this tutorial.  Click on the eye icon to see this file.     Each row is a gene (or feature) and each column is a sample, with counts against each gene.  Have a look at how the counts vary between samples, per gene.  We can t just compare the counts directly; they need to be normalized before comparison, and this will be done as part of the DGE analysis in the next step.", 
            "title": "Count reads per gene"
        }, 
        {
            "location": "/modules/dge/#dge-in-degust", 
            "text": "Degust is a tool on the web that can analyse the counts files produced in the step above, to test for differential gene expression.  (Degust can also display the results from DGE analyses performed elsewhere.)", 
            "title": "DGE in Degust"
        }, 
        {
            "location": "/modules/dge/#upload-counts-file", 
            "text": "Go to the  Degust web page . Click  Get Started .    Click on  Choose File .  Select the  htseq output file. tabular  (that you previously downloaded to your computer from Galaxy) and click  Open .  Click  Upload .   A Configuation page will appear.   For  Name  type  DGE in E coli  For  Info columns  select  Contig  For  Analyze server side  leave box checked.  For  Min read count  put  10 .  Click  Add condition  Add a condition called  Control  and select the LB columns.  Add a condition called  Treament  and select the MG columns.     Your Configuration page should look like this:    Save changes  View  - this brings up the Degust viewing window.", 
            "title": "Upload counts file"
        }, 
        {
            "location": "/modules/dge/#overview-of-degust-sections", 
            "text": "Top black panel with  Configure  settings at right.  Left: Conditions: Control and Treatment.  Left: Method selection for DGE.  Top centre: Plots, with options at right.  When either of the expression plots are selected, a heatmap appears below.  A table of genes (or features); expression in treatment relative to control (Treatment column); and significance (FDR column).", 
            "title": "Overview of Degust sections"
        }, 
        {
            "location": "/modules/dge/#analyze-gene-expression", 
            "text": "Under  Method , make sure that  Voom/Limma  is selected.  Click  Apply . This runs Voom/Limma on the uploaded counts.", 
            "title": "Analyze gene expression"
        }, 
        {
            "location": "/modules/dge/#mds-plot", 
            "text": "First, look at the MDS plot.    This is a multidimensional scaling plot which represents the variation between samples.  Ideally:  All the LB samples would be close to each other  All the MG samples would be close to each other  The LB and MG groups would be far apart    The x-axis is the dimension with the highest magnitude. The control/treatment samples should be split along this axis.  Our LB samples are on the left and the MG samples are on the right, which means they are well separated on their major MDS dimension, which looks correct.", 
            "title": "MDS plot"
        }, 
        {
            "location": "/modules/dge/#expression-ma-plot", 
            "text": "Each dot shows the change in expression in one gene.   The average expression (over both condition and treatment samples) is represented on the x-axis.  Plot points should be symmetrical around the x-axis.  We can see that many genes are expressed at a low level, and some are highly expressed.    The fold change is represented on the y axis.  If expression is significantly different between treatment and control, the dots are red. If not, they are blue. (In Degust, significant means FDR  0.05).  At low levels of gene expression (low values of the x axis), fold changes are less likely to be significant.     Click on the dot to see the gene name.", 
            "title": "Expression - MA plot"
        }, 
        {
            "location": "/modules/dge/#expression-parallel-coordinates-and-heatmap", 
            "text": "Each line shows the change in expression in one gene, between control and treatment.   Go to  Options  at the right.  For  FDR cut-off  set at 0.001.  This is a significance level (an adjusted p value). We will set it quite low in this example, to ensure we only examine key differences.     Look at the Parallel Coordinates plot. There are two axes:   Left:  Control : Gene expression in the control samples. All values are set at zero.  Right:  Treatment  Gene expression in the treatment samples, relative to expression in the control.     The blocks of blue and red underneath the plot are called a heatmap.   Each block is a gene. Click on a block to see its line in the plot above.  Look at the row for the Treatment. Relative to the control, genes expressed more are red; genes expressed less are blue.      Note:   for an experiment with multiple treatments, the various treatment axes can be dragged to rearrange. There is no natural order (such as a time series).", 
            "title": "Expression - Parallel Coordinates and heatmap"
        }, 
        {
            "location": "/modules/dge/#table-of-genes", 
            "text": "Contig : names of genes. Note that gene names are sometimes specific to a species, or they may be only named as a locus ID (a chromosomal location specified in the genome annotation).  FDR : False Discovery Rate. This is an adjusted p value to show the significance of the difference in gene expression between two conditions. Click on column headings to sort. By default, this table is sorted by FDR.  Control  and  Treatment : log2(Fold Change) of gene expression. The default display is of fold change in the treatment relative to the control. Therefore, values in the  Control  column are zero. This can be changed in the  Options  panel at the top right.  In some cases, a large fold change will be meaningful but in others, even a small fold change can be important biologically.   Table of genes and expression:", 
            "title": "Table of genes"
        }, 
        {
            "location": "/modules/dge/#dge-in-galaxy", 
            "text": "Differential gene expression can also be analyzed in Galaxy. The input is the count matrix produced by a tool such as HTSeq-Count (see section above:  Count reads per gene ).   Go to  Tools   NGS Analysis   NGS: RNA Analysis   Differential Count models  This has options to use edgeR, DESeq, or Voom. Here we will use Voom.    For  Select an input matrix  choose the  count matrix  file generated in the previous step.  For  Title for job outputs  enter  DGE using voom .  For  Select columns containing treatment  tick boxes for the MG samples.  For  Select columns containing control  tick boxes for the LB samples.  Under  Run this model using edgeR  choose  Do not run edgeR .  Under  Run the same model with DESeq2 and compare findings  choose  Do not run DESeq2 .  Under  Run the same model with Voom/limma and compare findings  choose  Run VOOM .   Your tool interface should look like this:    Click  Execute .   There are two output files.  View the file called  DGEusingvoom.html .   Scroll down to  VOOM log output  and  #VOOM top 50 .  The  Contig  column has the gene names.  Look at the  adj.P.Val  column. This is an adjusted p value to show the significance of the gene expression difference, accounting for the effect of multiple testing. Also known as False Discovery Rate. The table is ordered by the values in this column.  Look at the  logFC  column. This is log2(Fold Change) of relative gene expression between the treatment samples and the control samples.   View the file called  DEGusingvoom_topTable_VOOM.xls .   This is a list of all the genes that had transcripts mapped, and associated statistics.", 
            "title": "DGE in Galaxy"
        }, 
        {
            "location": "/modules/dge/#what-next", 
            "text": "To learn more about the differentially-expressed genes:   Go to  the NCBI website.  Under  All Databases , click on  Gene  Enter the gene name in the search bar; e.g. ptsG  Click on the first result that matches the species (e.g. in this case,  E. coli ).  This provides information about the gene, and may also show further references (e.g. in this case, a link to the EcoGene resource).     Some of the most (statistically) significant differentially-expressed genes in this experiment are:   ptsG : a glucose-specific transporter.  setA : a sugar efflux transporter; is induced by glucose-phosphate stress.  sucD : the alpha subunit of the the gene for succinyl-CoA synthetase; involved in ATP production.  sucB : a component of the 2-oxoglutarate dehydrogenase complex; catalyzes a step in the Krebs cycle.  deoC : 2-deoxyribose-5-phosphate aldolase; binds selenium; may be involved in selenium transport.   Next steps: Investigate the biochemical pathways involving the genes of interest.", 
            "title": "What next?"
        }, 
        {
            "location": "/modules/dge/#more-information", 
            "text": "Link to Degust.  Link to Voom paper.", 
            "title": "More information"
        }, 
        {
            "location": "/modules/metagenomics/metagenomics/", 
            "text": "Metagenomics\n\n\nadd link to intro metagenomics material (RDC project)", 
            "title": "Metagenomics"
        }, 
        {
            "location": "/modules/metagenomics/metagenomics/#metagenomics", 
            "text": "add link to intro metagenomics material (RDC project)", 
            "title": "Metagenomics"
        }, 
        {
            "location": "/modules/workflows/", 
            "text": "Galaxy workflows\n\n\nWhat are Galaxy workflows?\n\n\nMove, change this stuff below\n\n\nAlthough we can use tools in Galaxy to analyse data and create a history, there is also a way to create a workflow of files, tools, settings and outputs. You can then input different datasets and run the workflow.\n\n\nThis tutorial covers building a workflow to analyse a bacterial genome, from input Fastq sequencing reads to assembly, annotation, and visualization.\n\n\nStart\n\n\nGo to your Galaxy instance and Register/Login.\n\n\nImport a history of data files:\n\n\n\n\nClick on the \nHistory\n cog \n\n\nSelect \nImport from File\n\n\nIn the box called \nArchived History URL\n, paste in this link address to the Galaxy history of input files:\n\n\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz\n\n\n\n\nClick \nSubmit\n\n\nWait a few seconds.\n\n\nClick on the \nView all histories\n button \n\n\nSee if the Galaxy history has been imported: it will be called \nimported from archive: Data\n\n\nAbove that pane, click on the \nSwitch to\n button.\n\n\nThen click \nDone\n (in the top left corner).\n\n\n\n\nYou should now have a list of five files in your current history.\n\n\n\n\n\n\nRe-name this history \nWorkflows\n.\n\n\n\n\n\n\nBuild a workflow\n\n\nWe will first write a workflow for genome assembly.\n\n\n\n\nIn the top menu bar in Galaxy, click on \nWorkflow\n.\n\n\n\n\n\n\n\n\nClick on \nCreate new workflow\n\n\n\n\n\n\n\n\n\n\nUnder \nWorkflow Name:\n put in \nReads to Annotation\n.\n\n\n\n\n\n\nClick \nCreate\n\n\n\n\n\n\nThis will bring up the \nWorkflow Canvas\n, a grid where you can arrange the workflow.\n\n\n\n\n\n\nAdd inputs\n\n\n\n\n\n\nIn the Tools panel, click \nInputs: Input datset\n twice (at the very top of the list).\n\n\n\n\n\n\nA box will appear: drag it to the left and there will be another box underneath it. Drag this also to the left. Your workflow canvas should look like this:\n\n\n\n\n\n\n\n\n\n\nClick on the first box. Look in the right hand panel (now called \nDetails\n) and change the name of the Input dataset to \nR1.fastq\n. Press Enter for the change to be saved.\n\n\n\n\n\n\n\n\nRepeat for the second input dataset box, naming that one \nR2.fastq\n.\n\n\n\n\nAdd the tool \nspades\n\n\n\n\nIn the tools panel, click on \nNGS Analysis: NGS Assembly: spades\n.\nThis puts the spades box onto the workflow canvas.\n\n\n\n\n\n\n\n\n\n\nClick on the spades box and look in the Details pane on the right. This shows all the options in spades. Choose:\n\n\n\n\n\n\nRun only Assembly\n: \nYes\n [the \nYes\n button should be darker grey]\n\n\n\n\nKmers to use separated by commas:\n \n33,55,91\n  [note: no spaces]  \n\n\nCoverage cutoff:\n \nauto\n  \n\n\n\n\nJoin inputs to the tool\n\n\nNow tell spades which input files to use.\n\n\n\n\n\n\nLook at the input dataset box called \nR1.fastq\n and find the small arrow: \n\n\n\n\n\n\nClick on this and drag the arrow over to the spades box input arrow \n next to \nLibraries 1 \n Files 1 \n Forward reads\n.\n\n\n\n\n\n\n\n\n\n\nRepeat for the dataset box \nR2.fastq\n, joining to the spades box next to \nLibraries 1 \n Files 1 \n Reverse reads\n.\n\n\n\n\nSave it and run\n\n\n\n\nClick on the cog at the top right of the workflow canvas and \nSave\n.\n\n\n\n\n\n\n\n\n\n\nClick the cog again and choose \nRun\n.\n\n\n\n\n\n\nThis brings up a window where you specify the input datasets to use in the workflow.\n\n\n\n\nUnder \nStep1: Input dataset\n choose \nmutant_R1.fastq\n.\n\n\nUnder \nStep2: Input dataset\n choose \nmutant_R2.fastq\n.\n\n\n\n\n\n\n\n\nClick \nRun workflow\n.\n\n\n\n\n\n\nThis will run the workflow (spades) and save the output to the top of your current history in the right hand panel.\n\n\n\n\nView some of the output files with the eye icon to check that the workflow (in this case, just spades) ran correctly.\n\n\n\n\nAdd to the worfklow\n\n\nWe will add another tool to the workflow.\n\n\n\n\n\n\nGo to the top Galaxy panel and click \nWorkflow\n.\n\n\n\n\n\n\nYour workflow \nReads to Annotation\n should be in the list. Click on the drop-down arrow next to this workflow and choose \nEdit\n.\n\n\n\n\n\n\nThis will bring up the Workflow Canvas where we can add more inputs and tools.\n\n\n\n\n\n\nIn the Tools panel, click on \nNGS Annotation: Prokka\n. This will add a Prokka box to the workflow canvas.\n\n\n\n\n\n\nWe need to tell Prokka which genome assembly) to annotate. Join the spades output called \nout_contigs(fasta)\n to the Prokka input called \nContigs to annotate\n.\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the Prokka box and change some of the settings in the right hand Details panel:\n\n\n\n\nSet the following parameters (leave everything else unchanged):\n\n\nLocus tag prefix (\nlocustag)\n: P\n\n\nForce GenBank/ENA/DDJB compliance (\ncompliant)\n: \nNo\n\n\nSequencing Centre ID (\ncentre)\n: V\n\n\nUse genus-specific BLAST database\n \nNo\n  \n\n\n\n\n\n\n\n\nClick on the cog to the top right of the workflow canvas to save.\n\n\n\n\n\n\nClick on the cog again to run.\n\n\n\n\nAgain, choose the input files: \nmutant_R1.fastq\n and \nmutant_R2.fastq\n, and then click \nRun workflow\n.\n\n\n\n\n\n\n\n\nThe output from the workflow (files from spades and prokka) will appear at the top of the History panel.\n\n\n\n\n\n\nClick on the eye icon for some files to verify the workflow ran correctly.      \n\n\n\n\n\n\nAdd more to the workflow\n\n\nWe will add a visualization tool to view the genome annotation.\n\n\n\n\n\n\nGo to the top Galaxy panel and click \nWorkflow\n.\n\n\n\n\n\n\nYour workflow \nReads to Annotation\n should be in the list. Click on the drop-down arrow next to this workflow and choose \nEdit\n.\n\n\n\n\n\n\nThis will bring up the Workflow Canvas where we can add more inputs and tools.\n\n\n\n\n\n\nIn the Tools panel, click on \nStatistics and Visualisation: Graph/Display Data: JBrowse\n. This will add a JBrowse box to the workflow canvas.\n\n\n\n\n\n\nClick on the JBrowse box. In the Details pane:\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nClick \nInsert Track Group\n\n\n\n\n\n\nUnder \nTrack Category\n type in \ngene annotations\n.\n\n\n\n\n\n\nClick \nInsert Annotation Track\n\n\n\n\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\n\n\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\n\n\n\n\nClick on \nJBrowse Styling Options \n\n\n\n\n\n\nUnder \nJBrowse style.label\n correct the word \nprodcut\n to \nproduct\n.\n\n\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\n\n\n\n\nNow we need to tell JBrowse the input files to use.\n\n\n\n\n\n\nJoin the Prokka output \nout_fna (fasta)\n to the JBrowse input \nFasta sequences\n\n\n\n\n\n\nJoin the Prokka output \nout_gff (gff)\n to the JBrowse input \nTrack Group 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the cog to save; again to run; choose input files; \nRun workflow\n; examine output files in current history.\n\n\n\n\n\n\nThe workflow will now assemble and annotate the genome, and create a JBrowse view of the annotations.\n\n\n\n\n\n\nJBrowse will produce one output file.\n\n\n\n\nClick on the eye icon to view.\n\n\nIn the centre drop down box, choose contig 6.\n\n\nUnder \nAvailable Tracks\n on the left, tick the boxes.\n\n\nZoom in and out with the plus and minus icons.\n\n\nThe blue blocks are the genome annotations.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary\n\n\n\n\n\n\nOur workflow is now:\n\n\n\n\nFastq\n sequence reads to Spades for assembly\n\n\nSpades \ncontigs fasta file\n to Prokka for annotation\n\n\nProkka \nfasta file\n and \n.gff file\n to JBrowse for visualisation.\n\n\n\n\n\n\n\n\nWe can re-run this workflow with different input Fastq files.\n\n\n\n\n\n\nOther workflow options\n\n\nSaving outputs\n\n\nTo save only some output files:\n\n\n\n\nGo to the workflow canvas.\n\n\nFind the star next to the outputs.\n\n\nClick on the star for any outputs you want to save.\n\n\n\n\n\n\nTo save these starred files from the workflow output as a new history:\n\n\n\n\nBefore you click \nRun workflow\n, tick the box above to \nSend results to a new history\n.\n\n\n\n\nImport a workflow\n\n\nTo import an existing Galaxy Workflow:\n\n\n\n\nGo to the Workflow tab in the top panel.\n\n\nAt the top right, click on \nUpload or import workflow\n.\n\n\n\n\nExtract a workflow\n\n\nYou can extract a workflow from an existing Galaxy history.\n\n\n\n\nGo to your Galaxy history\n\n\nClick on the History cog icon and choose \nExtract Workflow\n.\n\n\nGive it a name and click \nCreate Workflow\n.\n\n\nTo edit, go to the Workflow tab, select the workflow, and choose \nEdit\n from the drop down menu. You can then edit the steps on the Workflow Canvas.\n\n\n\n\nA note on workflow tabs\n\n\nWe have been using the top Workflow tab. There is another tab at the bottom of the tool panel called Workflows. Click on \nWorkflows: All Workflows\n. This gives a similar view with a list of workflows, and you can also click on the top right tab \nswitch to workflow management view\n.\n\n\nTo return to the main Galaxy window click on the Analyze Data tab in the top panel.\n\n\nLinks\n\n\nIntroduction to workflows:\n\nhttps://wiki.galaxyproject.org/Learn/AdvancedWorkflow\n\n\nAnother tutorial on workflows:\n\nhttp://vlsci.github.io/lscc_docs/tutorials/galaxy-workflows/galaxy-workflows/\n\n\nGalaxy published workflows:\n\nhttps://usegalaxy.org/workflow/list_published", 
            "title": "Workflows - Introduction"
        }, 
        {
            "location": "/modules/workflows/#galaxy-workflows", 
            "text": "", 
            "title": "Galaxy workflows"
        }, 
        {
            "location": "/modules/workflows/#what-are-galaxy-workflows", 
            "text": "", 
            "title": "What are Galaxy workflows?"
        }, 
        {
            "location": "/modules/workflows/#move-change-this-stuff-below", 
            "text": "Although we can use tools in Galaxy to analyse data and create a history, there is also a way to create a workflow of files, tools, settings and outputs. You can then input different datasets and run the workflow.  This tutorial covers building a workflow to analyse a bacterial genome, from input Fastq sequencing reads to assembly, annotation, and visualization.", 
            "title": "Move, change this stuff below"
        }, 
        {
            "location": "/modules/workflows/#start", 
            "text": "Go to your Galaxy instance and Register/Login.  Import a history of data files:   Click on the  History  cog   Select  Import from File  In the box called  Archived History URL , paste in this link address to the Galaxy history of input files:   https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz   Click  Submit  Wait a few seconds.  Click on the  View all histories  button   See if the Galaxy history has been imported: it will be called  imported from archive: Data  Above that pane, click on the  Switch to  button.  Then click  Done  (in the top left corner).   You should now have a list of five files in your current history.    Re-name this history  Workflows .", 
            "title": "Start"
        }, 
        {
            "location": "/modules/workflows/#build-a-workflow", 
            "text": "We will first write a workflow for genome assembly.   In the top menu bar in Galaxy, click on  Workflow .     Click on  Create new workflow      Under  Workflow Name:  put in  Reads to Annotation .    Click  Create    This will bring up the  Workflow Canvas , a grid where you can arrange the workflow.", 
            "title": "Build a workflow"
        }, 
        {
            "location": "/modules/workflows/#add-inputs", 
            "text": "In the Tools panel, click  Inputs: Input datset  twice (at the very top of the list).    A box will appear: drag it to the left and there will be another box underneath it. Drag this also to the left. Your workflow canvas should look like this:      Click on the first box. Look in the right hand panel (now called  Details ) and change the name of the Input dataset to  R1.fastq . Press Enter for the change to be saved.     Repeat for the second input dataset box, naming that one  R2.fastq .", 
            "title": "Add inputs"
        }, 
        {
            "location": "/modules/workflows/#add-the-tool-spades", 
            "text": "In the tools panel, click on  NGS Analysis: NGS Assembly: spades .\nThis puts the spades box onto the workflow canvas.      Click on the spades box and look in the Details pane on the right. This shows all the options in spades. Choose:    Run only Assembly :  Yes  [the  Yes  button should be darker grey]   Kmers to use separated by commas:   33,55,91   [note: no spaces]    Coverage cutoff:   auto", 
            "title": "Add the tool \"spades\""
        }, 
        {
            "location": "/modules/workflows/#join-inputs-to-the-tool", 
            "text": "Now tell spades which input files to use.    Look at the input dataset box called  R1.fastq  and find the small arrow:     Click on this and drag the arrow over to the spades box input arrow   next to  Libraries 1   Files 1   Forward reads .      Repeat for the dataset box  R2.fastq , joining to the spades box next to  Libraries 1   Files 1   Reverse reads .", 
            "title": "Join inputs to the tool"
        }, 
        {
            "location": "/modules/workflows/#save-it-and-run", 
            "text": "Click on the cog at the top right of the workflow canvas and  Save .      Click the cog again and choose  Run .    This brings up a window where you specify the input datasets to use in the workflow.   Under  Step1: Input dataset  choose  mutant_R1.fastq .  Under  Step2: Input dataset  choose  mutant_R2.fastq .     Click  Run workflow .    This will run the workflow (spades) and save the output to the top of your current history in the right hand panel.   View some of the output files with the eye icon to check that the workflow (in this case, just spades) ran correctly.", 
            "title": "Save it and run"
        }, 
        {
            "location": "/modules/workflows/#add-to-the-worfklow", 
            "text": "We will add another tool to the workflow.    Go to the top Galaxy panel and click  Workflow .    Your workflow  Reads to Annotation  should be in the list. Click on the drop-down arrow next to this workflow and choose  Edit .    This will bring up the Workflow Canvas where we can add more inputs and tools.    In the Tools panel, click on  NGS Annotation: Prokka . This will add a Prokka box to the workflow canvas.    We need to tell Prokka which genome assembly) to annotate. Join the spades output called  out_contigs(fasta)  to the Prokka input called  Contigs to annotate .       Click on the Prokka box and change some of the settings in the right hand Details panel:   Set the following parameters (leave everything else unchanged):  Locus tag prefix ( locustag) : P  Force GenBank/ENA/DDJB compliance ( compliant) :  No  Sequencing Centre ID ( centre) : V  Use genus-specific BLAST database   No        Click on the cog to the top right of the workflow canvas to save.    Click on the cog again to run.   Again, choose the input files:  mutant_R1.fastq  and  mutant_R2.fastq , and then click  Run workflow .     The output from the workflow (files from spades and prokka) will appear at the top of the History panel.    Click on the eye icon for some files to verify the workflow ran correctly.", 
            "title": "Add to the worfklow"
        }, 
        {
            "location": "/modules/workflows/#add-more-to-the-workflow", 
            "text": "We will add a visualization tool to view the genome annotation.    Go to the top Galaxy panel and click  Workflow .    Your workflow  Reads to Annotation  should be in the list. Click on the drop-down arrow next to this workflow and choose  Edit .    This will bring up the Workflow Canvas where we can add more inputs and tools.    In the Tools panel, click on  Statistics and Visualisation: Graph/Display Data: JBrowse . This will add a JBrowse box to the workflow canvas.    Click on the JBrowse box. In the Details pane:    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    Under  Reference genome to display  choose  Use a genome from history .    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Click  Insert Track Group    Under  Track Category  type in  gene annotations .    Click  Insert Annotation Track    For  Track Type  choose  GFF/GFF3/BED/GBK Features    Under  JBrowse Track Type[Advanced]  select  Canvas Features .    Click on  JBrowse Styling Options     Under  JBrowse style.label  correct the word  prodcut  to  product .    Under  Track Visibility  choose  On for new users .      Now we need to tell JBrowse the input files to use.    Join the Prokka output  out_fna (fasta)  to the JBrowse input  Fasta sequences    Join the Prokka output  out_gff (gff)  to the JBrowse input  Track Group 1         Click on the cog to save; again to run; choose input files;  Run workflow ; examine output files in current history.    The workflow will now assemble and annotate the genome, and create a JBrowse view of the annotations.    JBrowse will produce one output file.   Click on the eye icon to view.  In the centre drop down box, choose contig 6.  Under  Available Tracks  on the left, tick the boxes.  Zoom in and out with the plus and minus icons.  The blue blocks are the genome annotations.", 
            "title": "Add more to the workflow"
        }, 
        {
            "location": "/modules/workflows/#summary", 
            "text": "Our workflow is now:   Fastq  sequence reads to Spades for assembly  Spades  contigs fasta file  to Prokka for annotation  Prokka  fasta file  and  .gff file  to JBrowse for visualisation.     We can re-run this workflow with different input Fastq files.", 
            "title": "Summary"
        }, 
        {
            "location": "/modules/workflows/#other-workflow-options", 
            "text": "", 
            "title": "Other workflow options"
        }, 
        {
            "location": "/modules/workflows/#saving-outputs", 
            "text": "To save only some output files:   Go to the workflow canvas.  Find the star next to the outputs.  Click on the star for any outputs you want to save.    To save these starred files from the workflow output as a new history:   Before you click  Run workflow , tick the box above to  Send results to a new history .", 
            "title": "Saving outputs"
        }, 
        {
            "location": "/modules/workflows/#import-a-workflow", 
            "text": "To import an existing Galaxy Workflow:   Go to the Workflow tab in the top panel.  At the top right, click on  Upload or import workflow .", 
            "title": "Import a workflow"
        }, 
        {
            "location": "/modules/workflows/#extract-a-workflow", 
            "text": "You can extract a workflow from an existing Galaxy history.   Go to your Galaxy history  Click on the History cog icon and choose  Extract Workflow .  Give it a name and click  Create Workflow .  To edit, go to the Workflow tab, select the workflow, and choose  Edit  from the drop down menu. You can then edit the steps on the Workflow Canvas.", 
            "title": "Extract a workflow"
        }, 
        {
            "location": "/modules/workflows/#a-note-on-workflow-tabs", 
            "text": "We have been using the top Workflow tab. There is another tab at the bottom of the tool panel called Workflows. Click on  Workflows: All Workflows . This gives a similar view with a list of workflows, and you can also click on the top right tab  switch to workflow management view .  To return to the main Galaxy window click on the Analyze Data tab in the top panel.", 
            "title": "A note on workflow tabs"
        }, 
        {
            "location": "/modules/workflows/#links", 
            "text": "Introduction to workflows: https://wiki.galaxyproject.org/Learn/AdvancedWorkflow  Another tutorial on workflows: http://vlsci.github.io/lscc_docs/tutorials/galaxy-workflows/galaxy-workflows/  Galaxy published workflows: https://usegalaxy.org/workflow/list_published", 
            "title": "Links"
        }, 
        {
            "location": "/modules/workflow-assembly-annotation/", 
            "text": "", 
            "title": "Workflow - Assembly and annotation"
        }, 
        {
            "location": "/modules/workflow-variant-calling/", 
            "text": "", 
            "title": "Workflow - Variant calling"
        }, 
        {
            "location": "/modules/workflow-rna-seq/", 
            "text": "", 
            "title": "Workflow - Differential gene expression"
        }, 
        {
            "location": "/galaxy-resources/", 
            "text": "Galaxy Resources\n\n\nGalaxy Training Network\n- note is for usegalaxy.org", 
            "title": "Galaxy Resources"
        }, 
        {
            "location": "/galaxy-resources/#galaxy-resources", 
            "text": "Galaxy Training Network\n- note is for usegalaxy.org", 
            "title": "Galaxy Resources"
        }
    ]
}